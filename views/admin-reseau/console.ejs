<%- include('header', { data: data }) %>
<link rel="stylesheet" href="/css/xterm/xterm.css" />
<script src="/js/xterm/xterm.js"></script>
      <div id="terminal"></div>
<script>
    var term = new Terminal({cols:120});
    term.open(document.getElementById('terminal'));

    function runFakeTerminal() {
        if (term._initialized) {
        return;
        }

        term._initialized = true;

        term.prompt = () => {
        term.write('\r\n$ ');
        };

        cmd_line = "";
        var banner = Array(" ",
        "  _____                 __                   __      __                         __", 
        " / ___/______ ___ ___  / /____ _______  ___ / /_   _/_/ _______  ___  ___ ___  / /__ ",
        "/ (_ / __/ -_) -_) _ \\/ __/ -_) __/ _ \\/ -_) __/ _/_/  / __/ _ \\/ _ \\(_-</ _ \\/ / -_)",
        "\\___/_/  \\__/\\__/_//_/\\__/\\__/_/ /_//_/\\__/\\__/ /_/    \\__/\\___/_//_/___/\\___/_/\\__/ ",
        " ");
              
        banner.forEach(line => {
            write_line(line);
        });
        // term.writeln('Bienvenue dans la console');
        // term.writeln('Avec cet outil, vous pouvez vÃ©rifier les status des serveurs,');
        // term.writeln('Et voir si vous pouvez les atteindre...');
        // term.writeln('');
        prompt(term);

        term.onData(e => {
        switch (e) {
            case '\r': // Enter
            case '\u0003': // Ctrl+C
            exec_command(cmd_line);
            cmd_line = "";
            prompt(term);
            break;
            case '\u007F': // Backspace (DEL)
            // Do not delete the prompt
            if (term._core.buffer.x > 2) {
                term.write('\b \b');
                cmd_line = "";
            }
            break;
            default: // Print all other characters for demo
            term.write(e);
            cmd_line += e;
        }
        });
    }

    function prompt(term) {
        term.write('\r\n$ ');
    }

    /*
     Function to execcute command
     
     We need to fake some command 
      - "status 192.168.10.10"
      - "ping 192.168.10.10"
      - "help" which give explanation on both of previous commands
    */
    function exec_command(line){
        cmd = line.toLowerCase();
        console.log(line);
        // 1. Regex to parse command
        // 2. switch on what we should do
        if (cmd == "help") {
            help();
        }
        // 3. Post to the server (socket ?)
        // 4. The server gives back true/false response
    };

    function write_line(line) {
        term.write("");
        for( i=0; i < line.length; i++ ){
            term.write(line[i]);
        }
        term.writeln("");
    }    
    
    function help() {
        write_line("");
        write_line("-----------------------------------------------------------");
        write_line("Here is a little help for guys...");
        write_line("-----------------------------------------------------------");
        write_line("Command '\x1B[1;3;31mstatus\x1B[0m' : see if server is infected or not.");
        write_line("usage : '\x1B[1;3;31mstatus [IP address]\x1B[0m'");
        write_line("");
        write_line("Command '\x1B[1;3;31mping\x1B[0m' : see if the server is reachable.");
        write_line("usage : '\x1B[1;3;31mping [IP Address]\x1B[0m'");
    }


    runFakeTerminal();
</script>
<%- include('footer', { data: data })%>
