<!DOCTYPE html>
<html lang="fr">
    <head>
        <meta charset="utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
        <meta name="mobile-web-app-capable" content="yes">

        <title>Administration de Parallaxe 2050</title>
        <meta name="theme-color" content="#ffffff">

        <!-- <link href="/css/bootswatch/bootstrap.min.css" rel="stylesheet"> -->
        <link href="/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet">

        <script src="/js/jquery.min.js"></script>    
        <script src="/socket.io/socket.io.js"></script>

        <script href="/bootstrap/dist/js/bootstrap.min.js"></script>

        <link href="/bootstrap-toggle/css/bootstrap-toggle.min.css" rel="stylesheet">
        <script src="/bootstrap-toggle/js/bootstrap-toggle.min.js"></script>

 <style>
 body {
    background: #dfdfdf;
 }
    .AdminReseauBg, .BDDBg, .ComDigitaleBg, .CodeEtProgBg .HardwareBg{
        color:white;
    }

    .toolbar {
        /* margin-left:40%; */
        float:right;
    }

    .activityTitle {
        float:left;
    }

    .controlActivity, .controlActivity:hover {
        color:white;
    }

    /********* formulaire de mode de jeu ************/
    #gameModeCard div.alert {
        margin-top:10px;
    }

    .gameMode {
        float:right;
    }

    .btnClose {
        float: right;
        font-size:16pt;
        cursor: pointer;
        color: rgb(26, 26, 26);
    }

    #titleResult {
        width:100%;
        background-color: grey;
    }

    .colorBg {
        background-color: gray;
        margin-left: auto;
        margin-right: auto;
        margin-top: 2%;
        margin-bottom: 2%;
        text-align: center;
        vertical-align: center;
        width: 200px;
        min-height: 150px;
    }

    .card {
        transition: all 0.2s linear;
         margin-top: 10px;
     }
    /******** First line ********/
    #firstLine {
        margin-bottom: 10px;
    }
    #firstLine .col-md-8 .btn {
        margin-top: 10px;
        margin-right: 10px;
    }

    /******** Global settings *********/
    #gameModeCard #gameMode {
        margin-bottom: 10px;
    }
    #gameModeCard .card-body > label {
        margin: 0;
        display: inline-block;
    }
    #gameModeCard .card-body > em {
        display: block;
        font-size: 14px;
        line-height: 20px;
        margin-bottom: 10px;
    }
    #gameModeCard #btnInitAll {
        /*margin-top: 10px;*/
    }



    /******** Lights effects ********/

    /* glitter the stepTitle when changed */
    /*.changed {
        box-shadow:
            0 0 30px 10px #fff,
            0 0 40px 20px #f0f,
            0 0 70px 50px #0ff !important;
    }*/

    /*.smooth_changed {
        box-shadow:
            0 0 30px 10px #fff,
            0 0 40px 20px #f0f,
            0 0 70px 50px #0ff !important;
    }*/

    #AdminReseau .changed,
    #AdminReseau .smooth_changed {
        box-shadow:
            0 0 30px 5px rgb(0, 198, 249) !important;
    }
    #BDD .changed,
    #BDD .smooth_changed {
        box-shadow:
            0 0 30px 5px rgb(114, 0, 254) !important;
    }
    #CodeEtProg .changed,
    #CodeEtProg .smooth_changed {
        box-shadow:
            0 0 30px 5px rgb(23, 218, 126) !important;
    }
    #ComDigitale .changed,
    #ComDigitale .smooth_changed {
        box-shadow:
            0 0 30px 5px rgb(249, 110, 0) !important;
    }
    #Hardware .changed,
    #Hardware .smooth_changed {
        box-shadow:
            0 0 30px 5px rgb(255, 0, 116) !important;
    }

    .btn {
        text-align: left;
        font-size: 14px;
    }

    /********* Activities ********/
    #activities {
        display: flex;
        align-items: stretch;
        justify-content : space-between;
    }
    #activities .activity {
        flex: 0 0 19%;
        max-width: 19%;
        padding: 0;
    }
    #activities .activity#colCodeEtProg {
        order: 1;
    }
    #activities .activity#colHardware {
        order: 2;
    }
    #activities .activity#colBDD {
        order: 3;
    }
    #activities .activity#colComDigitale {
        order: 4;
    }
    #activities .activity#colAdminReseau {
        order: 5;
    }
    #activities .activity .activity-container {
        display: flex;
        flex-direction: column;
        height: 100%;
        background-color: white;
        box-shadow: 0 .125rem .25rem rgba(0,0,0,.075) !important;
        border: 1px solid #f8f9fa !important;
        border-radius: 0.25rem;
    }
    h6.card-header {
        color: white;
        min-height: 63px;
        border-radius: 4px 4px 0 0;
        border-bottom: none;
    }
    #activities #nextStep {
        margin-bottom: 10px;
    }

    /*********** Spinners *************/
    .customSpinner {
        transition: 0.2s linear all;
        position: absolute;
        z-index: 98;
        top: 0;
        left: 0;
        bottom: 0;
        right: 0;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        background: rgba(0,0,0,0.8);
        text-align: center;
        color: white;
    }
    .customSpinner.hidden {
        opacity: 0;
        pointer-events: none;
    }
    #globalSpinner {
        position: fixed;
        z-index: 99;
    }

</style>
<body>
    <!-- Spinner for global page -->
    <div id="globalSpinner" class="customSpinner hidden">
        <div class="spinner-border" role="status">
            <span class="sr-only">Redémarrage du serveur</span>
        </div>
        <div>
            <br />
            <h4>Redémarrage du serveur en cours</h4>Cela peut prendre jusqu'à 60 secondes.
        </div>
    </div>
<!-- Begin page content -->
<main role="main" class="container-fluid">

    <div class="row" id="firstLine">
        <div class="col-md-4">
            <div id="gameModeCard" class="card mb-4 border-light shadow-sm">
                <h5 class="card-header">
                    <span class="activityTitle">Contrôles généraux du jeu</span>
                </h5>
                <div class="card-body">
                    <div class="btn-group btn-group-toggle" id="gameMode" data-toggle="buttons">
                        <label class="btn btn-info active" for="gameModeChkEducatif">
                            <input type="radio" name="gameModeChk" id="gameModeChkEducatif" value="classroom" checked> Educatif
                        </label>
                        <label class="btn btn-info" for="gameModeChkClassique">
                            <input type="radio" name="gameModeChk" id="gameModeChkClassique" value="classical"> Classique
                        </label>
                    </div>
                    <br />
                    <label class="badge badge-info">Educatif</label>
                    <em>Le container est paramétré pour une classe. Les sessions de jeu sont de 15 minutes.</em>
                    <label class="badge badge-info">Classique</label>
                    <em>Le container est en mode escape game classique, il est éventuellement ouvert, et les sessions de jeu sont de 40 minutes.</em>
                    <button id="btnInitAll" type="button" class="btn btn-warning popup" data-title="Tout ré-initialiser ?" data-body="Cela permet de remettre toutes les énigmes à 0 en une fois, dans le but d'accueillir un nouveau groupe." data-supplement="Ne pas oublier de passer sur chaque atelier pour mélanger les cartes, débrancher les câbles, raccrocher le téléphone et initialiser le launchpad en appuyant sur le bouton 8 !" data-function="initAll">Initialisation pour un nouveau groupe</button>
                </div>
            </div>
        </div>

        <div class="col-md-8">
            <div class="card mb-8 border-light shadow-sm">
                <h5 class="card-header">
                    <span class="activityTitle">Chronomètre</span>
                </h5>
                <div class="card-body">
                    <p class="card-text">
                        <iframe src="/timer" width="100%" height="250px"></iframe>

                        <a class="btn btn-warning controlTimerBtn popup" id="reset" href="#" data-title="Ré-initialiser le décompte ?" data-body='Remet le décompte à 15 minutes si le format "éducatif" est sélectionné, et à 40 minutes si le format "classique" est sélectionné.' data-function="resetCounting">Reinitialiser le décompte</a>
                      
                        <a class="btn btn-warning controlTimerBtn popup" id="stop" data-title="Mettre le décompte sur pause ?" data-body="Permet de mettre en pause le décompte." data-function="stopCounting" href="#">Mettre le décompte sur pause</a>

                        <a class="btn btn-warning controlTimerBtn popup" id="start" data-title="Mettre le décompte sur pause ?" data-body="Lance le décompte qui s'affiche sur l'écran central dans le container." data-function="startCounting" href="#">Lancer le décompte</a>
                    </p>

                </div>
            </div>
        </div>

    </div>

    <div id="activities">
        <!-- Loop on each game  -->
<% data.global_config.servers.forEach(function(server) { %>
        <div class="activity" id="col<%= server.id %>">
            <div class="activity-container" id="<%= server.id %>">
                    <!-- Spinner for the activity -->
                    <div id="<%= server.id %>Spinner" class="customSpinner hidden">
                        <div class="spinner-border" role="status">
                            <span class="sr-only">Redémarrage de l'activité</span>
                        </div>
                        <div>
                            <br />
                            Redémarrage<br />de l'activité en cours
                        </div>
                    </div>
                    <h6 class="card-header">
                        <span class="activityTitle"><%= server.description %></span>
                    </h6>
                    <div class="card-body">
                        <strong><u>Etape en cours :</u></strong><br /><span class="stepTitle">Aucune étape en cours. Passer le badge pour démarrer l'activité</span>
                        <!-- <br /><br /> -->
                    </div>
                    <div class="card-footer">
                        <a id="nextStep" href="#" class="btn btn-warning popup<%= server.id %>" data-title="Passer à l'étape suivante ?" data-body="Si les participant·es sont bloqué·es, cela leur permet de quand même avancer dans l'énigme !" data-function="nextStep">Passer à l'étape suivante</a>
                        <%
                            supplementText = "";
                            switch(server.id) {
                                case "AdminReseau": supplementText = "Ne pas oublier de décâbler le réseau sur le panel !";
                                    break;
                                case "BDD": supplementText = "Appuyer sur le bouton 8 du launchpad pour réinitialiser les touches !";
                                    break;
                                case "CodeEtProg": supplementText = "Penser à mélanger les cartes de \"Code / pas code\" !";
                                    break;
                                case "ComDigitale": supplementText = "Ne pas oublier de raccrocher le téléphone !";
                                    break;
                                case "Hardware": supplementText = "Ne pas oublier de débrancher les câbles entre le girlduino et Roberta !";
                                    break;
                            }
                        %>
                        <a id="<%= server.id %>_reinit" href="#" class="btn btn-warning popup<%= server.id %>" data-title="Remettre l'activité à 0 ?" data-body="Cela affichera un message d'attente à l'écran, demandant aux participant·es de badger pour débuter l'activité." data-supplement="<%= supplementText %>" data-function="reinitServer" title="Remettre l'activité à 0">Remettre l'activité à 0</a>
                    </div>
            </div>
            <!-- Modal -->
            <div class="modal" tabindex="-1" id="confirmModal<%= server.id %>">
              <div class="modal-dialog">
                <div class="modal-content">
                  <div class="modal-header">
                    <h5 class="modal-title"></h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                      <span aria-hidden="true">&times;</span>
                    </button>
                  </div>
                  <div class="modal-body">
                    <p></p>
                  </div>
                  <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Non, j'annule</button>
                    <button type="button" class="btn btn-primary">Oui, je valide !</button>
                  </div>
                </div>
              </div>
            </div>
        </div>
<% }) %>
    </div>

</main>

<!-- Modal -->
<div class="modal" tabindex="-1" id="confirmModal">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title"></h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <p></p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Non, j'annule</button>
        <button type="button" class="btn btn-primary">Oui, je valide !</button>
      </div>
    </div>
  </div>
</div>

<script src="/bootstrap/dist/js/bootstrap.min.js"></script>
<script>
     $(document).ready(function() {

        // Socket for timer control 
        var socket_timer = io('http://<%= data.global_config.app.adminServerIp %>:<%= data.global_config.app.adminServerPort %>/timercontrol');
        var gameMode = "classroom";

        // mise en surbrillance d'un élément
        function highlight(elt, cls) {
            cls = (!cls) ? "changed": cls;
            elt.addClass(cls);
            setTimeout(function() {
                elt.removeClass(cls);
            }, 200);
        }

        // Listener sur le boutons gameMode
        $('#gameMode label').on('click', function(e) {
            e.preventDefault();
            $('#gameMode label').removeClass('active');
            $(this).addClass('active');
            $('#gameMode label input').removeAttr('checked');
            $(this).find('input').attr("checked", "checked");
            gameMode = $(this).find('input').val();
            socket_timer.emit('toserver.timerControl',  { action: "set", gameMode: gameMode } );
        });

        // Listen to game server directive (setter on connection)
        socket_timer.on('toclient.gameMode', function(data){
            gameMode = data.gameMode;
            $('#gameMode label').removeClass('active');
            $('#gameMode label input').removeAttr('checked');
            if(gameMode == "classroom") {
                $('#gameModeChkEducatif').parent().addClass('active');
                $('#gameModeChkEducatif').prop('checked', 'checked');
            }
            else {
                $('#gameModeChkClassique').parent().addClass('active');
                $('#gameModeChkClassique').prop('checked', 'checked');
            }
        });

        // 
        // When click on popup button, open modal
        // 
        $('#confirmModal').modal('hide');
        var buttonPopup;
        $('.popup').on('click', function(e) {
            e.preventDefault();
            buttonPopup = $(this);

            // Construction de la popup
            $('#confirmModal .modal-title').html(buttonPopup.data('title'));
            var body = buttonPopup.data('body');
            if(buttonPopup.data('supplement') && buttonPopup.data('supplement') !== undefined && buttonPopup.data('supplement') != "") {
                body += '<br /><br /><strong><u>Attention :</u> ' + buttonPopup.data('supplement');
            }
            $('#confirmModal .modal-body').html(body);
            // Ouverture de la popup
            $('#confirmModal').modal('show');

            $('#confirmModal .btn-primary').on('click', function(e) {
                e.preventDefault();
                // Cache la modale
                $('#confirmModal').modal('hide');
                // Lance la bonne function
                switch(buttonPopup.data('function')) {
                    case "initAll":
                        initAll();
                        break;
                    case "resetCounting":
                        setCouting("reset");
                        break;
                    case "stopCounting":
                        setCouting("stop");
                        break;
                    case "startCounting":
                        setCouting("start");
                        break;
                    default:
                        break;
                }
            })
        })

        // Listener sur les controles du timer
        function setCouting(action) {
            socket_timer.emit('toserver.timerControl',  { action: action, gameMode: gameMode } );
        }

        // Listener on init all button
        function initAll() {
            // Add loader to avoid unwanted actions
            $('#globalSpinner').removeClass('hidden');

            // Emitting order to kill node server and browsers
            <% data.global_config.servers.forEach(function(server) { %>
                socket_<%= server.id %>.emit('toserver.reInitServer', {gameMode: gameMode});
            <% }) %>

            // Refresh monitoring page
            setTimeout(function() {
                $('#globalSpinner').addClass('hidden');
            }, 60000);
        }


        // loop on each game
        // [ ->

<% data.global_config.servers.forEach(function(server) { %>

        // ------------------------------------------------------------------
        // Socket listening for <%= server.id %>
        // ------------------------------------------------------------------
        var socket_<%= server.id %> = io('http://<%= server.ip %>:<%= server.port %>/monitoring');
        var nextStep_<%= server.id %> = "";

        // Receiving new rfid badge
        socket_<%= server.id %>.on('toclient.newGameSession_<%= server.id %>', function(data) {
            $('#<%= server.id %>Spiner').addClass('hidden');
        });

        // Receiving Current Step of game
        socket_<%= server.id %>.on('toclient.newGameStep_<%= server.id %>', function(data) {
            $('#<%= server.id %>Spiner').addClass('hidden');
            $("#<%= server.id %> .stepTitle").html(data.stepTitle);
            highlight($("#<%= server.id %>"));
            // var etapesMsg = (data.totalSteps == 0) ? "En attente de scan RFID..." : data.totalSteps + " étapes au total.";
            // $("#<%= server.id %> .totalsteps").html(etapesMsg);
            // highlight($("#<%= server.id %>"));
        });

        // receiving solutions for current step
        socket_<%= server.id %>.on('toclient.solutionsForStep_<%= server.id %>', function(data) {
            var soluce = (data.solutions) ? data.solutions[0].responses : "";
            nextStep_<%= server.id %> = data.nextStep;
            if (!soluce || soluce.length == 0) soluce = "Pas de solution pour cette étape.";
            else soluce = JSON.stringify(soluce, null, 4);
            $("#<%= server.id %> .solutions").html(soluce);
        });

        // Lights control and color data
        socket_<%= server.id %>.on('toclient.colorsSets_<%= server.id %>', function(data) {
            data.colorsSet.forEach(function(c){
                var RGBcolors = "rgb("+c.rgb[0]+", "+c.rgb[1]+", "+c.rgb[2]+");";
                $("#"+c.scenarioId + " .card-header").attr("style", "background-color: "+RGBcolors+";" );
            });
        });

        //
        // Activity control: nextStep
        //
        function nextStep<%= server.id %>(element) {
            $.get( "http://<%= server.ip %>:<%= server.port %>/api/nextStep", function(data) {});
        }

        //
        // Activity control: reboot server
        //
        function reinitServer<%= server.id %>(element) {
            setTimeout(function(e) {
                $('#<%= server.id %>Spinner').removeClass('hidden');
            }, 170);
            socket_<%= server.id %>.emit('toserver.reInitServer', {gameMode: gameMode});
        }


        // 
        // When click on popup button for specific server, open modal
        // 
        $('#confirmModal<%= server.id %>').modal('hide');
        var buttonPopup;
        $('.popup<%= server.id %>').on('click', function(e) {
            e.preventDefault();
            buttonPopup = $(this);

            // Construction de la popup
            $('#confirmModal<%= server.id %> .modal-title').html(buttonPopup.data('title'));
            var body = buttonPopup.data('body');
            if(buttonPopup.data('supplement') && buttonPopup.data('supplement') !== undefined && buttonPopup.data('supplement') != "") {
                body += '<br /><br /><strong><u>Attention :</u> ' + buttonPopup.data('supplement');
            }
            $('#confirmModal<%= server.id %> .modal-body').html(body);
            // Ouverture de la popup
            $('#confirmModal<%= server.id %>').modal('show');

            $('#confirmModal<%= server.id %> .btn-primary').on('click', function(e) {
                e.preventDefault();
                // Cache la modale
                $('#confirmModal<%= server.id %>').modal('hide');
                // Lance la bonne function
                switch(buttonPopup.data('function')) {
                    case "reinitServer":
                        reinitServer<%= server.id %>(buttonPopup);
                        break;
                    case "nextStep":
                        nextStep<%= server.id %>(buttonPopup);
                        break;
                }
            })
        })

<% }) %>
        // <- ]
        // end loop

}); 
</script>
<!-- <%- JSON.stringify(data, null, 1) %>-->
</body>
</html>